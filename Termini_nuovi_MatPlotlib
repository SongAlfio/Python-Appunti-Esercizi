MatPlotlib
possono essere diverse linee come: "m.", "r", "m--" ecc...
plt.figure serve a creare il grafico
ax.set_xlabel serve a nominare l'asse x
ax.set_ylabel serve a nominare l'asse y
fig.suptitle serve a nominare il titolo del grafico(sopra)
show serve a dimostrare il grafico
ax.pie serve a fare la grafico a torta
bar serve a fare il grafico a barre
barh serve a fare il grafico a barre orrizontale
fig.set_figwidth Regola la larghezza del grafico
fig.set_figheight Regola l'altezza del grafico
fig.autofmt_xdate(rotation=90) Modifica la rotazione dei nomi dell'asse X
ax.set_ylim([0, 20000000]) Cambia il limite dei valori sull'asse Y
ax.set_yticklabels(np.arange(0, 20000001, step=2000000)) Cambia i nomi dei valori riportati sull'asse Y
ax.set_yticks(np.arange(0, 20000001, step=2000000)) Cambia la frequenza con cui viene visualizzato un nome sull'asse Y
plt.xticks(x) può cambiare il nome dell'asse x, e plt.yticks(y) per il nome delle etichette sull'asse y


questo è un semplice esempio di un grafico a torta:
Colonna_L = list(Dataframe['colonna'].astype(int))
Regione = list(Dataframe['Colonna'].dropna())
fig = plt.figure(figsize=[10,10])
plt.rcParams.update({'font.size': 15})
ax = plt.axes()
cols = ['c','b','hotpink','yellow','red','brown','lime'] 
ax.pie(lista di numeri interi,startangle=90,colors=cols,labels=lista di una colonna dei nomi,autopct='%1.1f%%',startangle=90)(possiamo usare anche explode=(0,0.1,0,0) per 突出 un pezzo)
plt.show()


questo è un codice semplice per fare un grafico a barre:
fig = plt.figure()
ax = plt.axes()
ax.bar(names, values)                                    # usiamo il barh per fare le barre orrizontali
fig.set_figwidth(12)                                     # Regola la larghezza del grafico
fig.set_figheight(4)                                     # Regola l'altezza del grafico
fig.autofmt_xdate(rotation=90)                           # Modifica la rotazione dei nomi dell'asse X
ax.set_ylim([0, 20000000])                               # Cambia il limite dei valori sull'asse Y
ax.set_yticklabels(np.arange(0, 20000001, step=2000000)) # Cambia i nomi dei valori riportati sull'asse Y
ax.set_yticks(np.arange(0, 20000001, step=2000000))      # Cambia la frequenza con cui viene visualizzato un nome sull'asse Y
plt.show()
